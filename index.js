const event={_callbacks:{},on(e,t){this._callbacks[e]=this._callbacks[e]||[],this._callbacks[e].push(t)},emit(e,...t){this._callbacks[e]&&this._callbacks[e].map(e=>e(...t))}},symbols={power:'<span class="fas fa-bolt"></span>',lifeSupport:'<span class="fas fa-heartbeat"></span>',processing:'<span class="fas fa-dice-d6"></span>',engineering:'<span class="fas fa-tools"></span>',sensors:'<span class="fas fa-satellite-dish"></span>',guidance:'<span class="fas fa-robot"></span>',engines:'<span class="fas fa-rocket"></span>',online:'<span class="online fas fa-check-circle"></span>',degraded:'<span class="degraded fas fa-exclamation-triangle"></span>',offline:'<span class="offline fas fa-window-close"></span>',destroyed:'<span class="destroyed fas fa-fire"></span>'},audio=document.createElement("audio");audio.src="assets/last-stand-in-space.mp3",audio.addEventListener("canplay",(function(){gameStarted&&state.get("options.music")&&(audio.volume=state.get("options.volume")/100,audio.play())})),event.on("start",()=>{audio.currentTime<=0&&state.get("options.music")&&(audio.volume=state.get("options.volume")/100,audio.play())}),audio.loop=!0,audio.load();const minSystemStatus=-1,maxSystemStatus=10,maxActionLevel=3,maxGameSpeed=200,initialLongCooldown=2e4,initialShortCooldown=1e4;let longCooldown=2e4,shortCooldown=1e4,isGameOver=!1,gameStarted=!1;const priorState=new WeakMap;function pause(){const e=document.getElementById("pause");if("true"===e.getAttribute("aria-disabled"))return;const t="true"===e.getAttribute("aria-checked");e.setAttribute("aria-checked",!t);const s=state.get("actions"),n=state.get("upgrades"),a=state.get("specials"),o=document.querySelector(".pause-overlay");if(t){o.setAttribute("hidden",!0),!isGameOver&&gameStarted&&(loop.start(),state.get("options.music")&&audio.play());for(const e in s){if(s[e].hidden)return;state.set(`actions.${e}.disabled`,priorState.get(s[e]))}for(const e in n){if(n[e].hidden)return;state.set(`upgrades.${e}.disabled`,priorState.get(n[e]))}for(const e in a){if(a[e].hidden)return;state.set(`specials.${e}.disabled`,priorState.get(a[e]))}}else{loop.stop(),audio.pause(),o.removeAttribute("hidden");for(const e in s){if(s[e].hidden)return;priorState.set(s[e],s[e].disabled),state.set(`actions.${e}.disabled`,!0)}for(const e in n){if(n[e].hidden)return;priorState.set(n[e],n[e].disabled),state.set(`upgrades.${e}.disabled`,!0)}for(const e in a){if(a[e].hidden)return;priorState.set(a[e],a[e].disabled),state.set(`actions.${e}.disabled`,!0)}}}function mute(){const e=document.getElementById("mute");if("true"===e.getAttribute("aria-disabled"))return;const t="true"===e.getAttribute("aria-checked");e.setAttribute("aria-checked",!t),audio.muted=!t}function options(){document.getElementById("options").open()}function clamp(e,t,s){return Math.min(Math.max(e,s),t)}function getStatus(e){const t=state.get(`systems.${e}.status`);return t<=0?"destroyed":t<=3?"offline":t<=7?"degraded":"online"}function getSystemLoad(e){let t=0;const s=state.get("systems");for(const n in s)t+=state.get(`systems.${n}.load.${e}`)||0;return t}function showChange(e,t){const s=document.getElementById(`${e}-diff`),n=document.createElement("span");n.innerHTML=t>0?`+${t}`:`&minus;${Math.abs(t)}`,n.classList.add(t>0?"online":"offline","diff-amount"),s.appendChild(n),setTimeout(()=>{n.classList.add("animate")},50),setTimeout(()=>{},1e3)}function start(){gameStarted=!0,document.getElementById("pause").removeAttribute("aria-disabled"),document.getElementById("mute").removeAttribute("aria-disabled"),document.querySelectorAll(".start").forEach(e=>{e.removeAttribute("hidden"),e.classList.remove("hidden"),e.classList.remove("visually-hidden")}),document.getElementById("intro").remove(),state.set("actions.lifeSupportLoad.hidden",!1),document.querySelector(".sidebar button").focus(),loop.start(),event.emit("start")}document.getElementById("pause").addEventListener("click",pause),document.getElementById("mute").addEventListener("click",mute),document.addEventListener("keydown",e=>{if("p"===e.key){pause();const e="true"===document.getElementById("pause").getAttribute("aria-checked");announce.innerHTML=`Game ${e?"paused":"resumed"}`}else if("l"===e.key){announce(`Next load cycle in ${getSeconds(state.get("actions.lifeSupportLoad.timer"))} seconds.`,"assertive")}});const failureMessges={power:"The power system fails. The lights go out one by one and are replaced by darkness. You hear soft crying coming from around the ship. As the air stales, they are replaced by silence.",lifeSupport:"The life support system fails. The air begins to go stale. The crew desperately tries to continue to make repairs, but the work slows as they do. Slowly, they drift asleep, never to wake again.",processing:"The processing system fails. The power system explodes from lack of resources. The ship lurches. Fire spreads quickly throughout the ship. Just as quickly it goes out, only to be replaced by Space."};function gameOver(){if(isGameOver)return;const e=Object.keys(state.get("systems")).find(e=>"destroyed"===getStatus(e));document.getElementById("fail-message").innerHTML=failureMessges[e],document.getElementById("lose-game").open(),isGameOver=!0}function lerp(e,t,s){return e*(1-s)+t*s}function getTime(e){return(e/1e3).toFixed(2)}function getSeconds(e){return Math.round(e/1e3)}function getPriceStr(e){const t=[],s=state.get("systems");for(const n in e)e[n]&&t.push(`${Math.abs(e[n])} ${s[n].name}`);return t.join(", ")}let message="";function announce(e,t){if(!e)return;const s=document.getElementById("aria-polite"),n=document.getElementById("aria-assertive"),a=document.createElement("span");a.innerHTML=e,"assertive"===t?n.appendChild(a):s.appendChild(a),setTimeout(()=>{a.remove()},1e4)}const initialState={options:{gameSpeed:100,colorBlind:!1,music:!0,volume:100},systems:{power:{name:"Power",type:"resource",status:2,hasLoad:!1,load:{}},lifeSupport:{name:"Life Support",type:"resource",status:7,hasLoad:!0,load:{lifeSupport:-1}},processing:{name:"Processing",type:"resource",status:9,hasLoad:!1,load:{}},engineering:{name:"Engineering",type:"main",status:2,hasLoad:!1,load:{}},guidance:{name:"Guidance",type:"main",status:2,hasLoad:!1,load:{}},engines:{name:"Engines",type:"main",status:1,hasLoad:!1,load:{}},sensors:{name:"Sensors",type:"main",status:3,hasLoad:!1,load:{}}},actions:{power:{name:"Generate Power",clicked:0,disabled:!0,price:{power:2,processing:-1},upgradePrice:{power:5,processing:-2},cooldown:shortCooldown,upgradeCooldown:shortCooldown/2,timer:0,style:"width: 0%;",special:{}},lifeSupport:{name:"Cycle Air",clicked:0,disabled:!0,hidden:!0,price:{lifeSupport:1,power:-1},upgradePrice:{lifeSupport:3,power:-1},cooldown:shortCooldown,upgradeCooldown:shortCooldown/2,timer:0,style:"width: 0%;",prereqs:{"actions.power.clicked":2},special:{}},processing:{name:"Mine asteroid",clicked:0,disabled:!0,hidden:!0,price:{processing:3,power:-1},upgradePrice:{processing:7,power:-2},cooldown:shortCooldown,upgradeCooldown:shortCooldown/2,timer:0,style:"width: 0%;",prereqs:{"actions.lifeSupport.clicked":2},special:{}},engineering:{name:"Repair Engineering",level:0,clicked:0,disabled:!0,hidden:!0,price:{engineering:2,power:-2,processing:-2},load:{power:[0,-1,0,-1],lifeSupport:[0,-1,-1,-3]},cooldown:shortCooldown,timer:0,style:"width: 0%;",prereqs:{"actions.lifeSupport.clicked":2},special:{name:"Install Source"}},guidance:{name:"Recalculate Guidance",level:0,clicked:0,disabled:!0,hidden:!0,price:{guidance:2,power:-1},load:{power:[0,-1,0,-1]},cooldown:shortCooldown,timer:0,style:"width: 0%;",prereqs:{"upgrades.amount.clicked":1},special:{name:"Plot Course"}},engines:{name:"Stabilize Engines",level:0,clicked:0,disabled:!0,hidden:!0,price:{engines:3,power:-3,lifeSupport:-1,processing:-1},load:{power:[0,-1,-1,-3],lifeSupport:[0,-1,0,0]},cooldown:shortCooldown,timer:0,style:"width: 0%;",prereqs:{"upgrades.amount.clicked":1},special:{name:"Activate JumpDrive"}},sensors:{name:"Calibrate Sensors",level:0,clicked:0,disabled:!0,hidden:!0,price:{sensors:2,power:-1,processing:-1},load:{power:[0,-1,0,0]},cooldown:shortCooldown,timer:0,style:"width: 0%;",prereqs:{"upgrades.amount.clicked":1},special:{name:"Scan Sector"}},powerLoad:{clicked:0,hidden:!0,price:{get power(){return getSystemLoad("power")}},cooldown:longCooldown,timer:2e3,auto:!0},lifeSupportLoad:{clicked:0,hidden:!0,price:{get lifeSupport(){return getSystemLoad("lifeSupport")}},cooldown:longCooldown,timer:4e3,auto:!0,style:"width: 0%;"},processingLoad:{},engineeringLoad:{},enginesLoad:{},guidanceLoad:{},sensorsLoad:{}},upgrades:{amount:{name:"Resource Amount",type:"amount",system:"engineering",clicked:0,disabled:!0,hidden:!0,prereqs:{"actions.engineering.level":1},systems:{power:!1,lifeSupport:!1,processing:!1}},auto:{name:"Auto Resource",type:"auto",system:"guidance",clicked:0,disabled:!0,hidden:!0,prereqs:{"actions.guidance.level":1},systems:{power:!1,lifeSupport:!1,processing:!1}},speed:{name:"Resource Speed",type:"speed",system:"engines",clicked:0,disabled:!0,hidden:!0,prereqs:{"actions.engines.level":1},systems:{power:!1,lifeSupport:!1,processing:!1}}},specials:{engineering:{name:"Install Source",clicked:0,hidden:!0,disabled:!0,cooldown:longCooldown,timer:0,style:"width: 0%;",prereqs:{"actions.engineering.level":2,"specials.engines.clicked":1,"specials.engines.hidden":!0}},guidance:{name:"Plot Course",clicked:0,hidden:!0,disabled:!0,cooldown:longCooldown,timer:0,style:"width: 0%;",prereqs:{"actions.guidance.level":2,"specials.sensors.clicked":1,"specials.sensors.hidden":!0}},engines:{name:"Activate JumpDrive",clicked:0,hidden:!0,disabled:!0,cooldown:longCooldown,timer:0,style:"width: 0%;",prereqs:{"actions.engines.level":2,"specials.guidance.clicked":1,"specials.guidance.hidden":!0}},sensors:{name:"Scan Sector",clicked:0,hidden:!0,disabled:!0,cooldown:longCooldown,timer:0,style:"width: 0%;",prereqs:{"actions.sensors.level":1}}}};function setText(e,t){e.innerHTML=t}function setAttribute(e,t,s){"number"==typeof s||s||t.startsWith("aria")&&"boolean"==typeof s?e.setAttribute(t,s):e.removeAttribute(t)}event.on("options.gameSpeed-changed",e=>{const t=100/e;for(system in state._state.actions)state.set(`actions.${system}.cooldown`,shortCooldown*t),state.set(`actions.${system}.upgradeCooldown`,shortCooldown/2*t);for(system in["powerLoad","lifeSupportLoad","processingLoad","guidanceLoad","enginesLoad","sensorsLoad"].forEach(e=>{state.set(`actions.${e}.cooldown`,longCooldown*t)}),state._state.specials)state.set(`specials.${system}.cooldown`,longCooldown*t)}),window.state={_state:initialState,set(e,t){const s=e.split(".");let n=this._state;for(let e=0;e<s.length-1;e++)n=n[s[e]]||{};n[s[s.length-1]]=t,event.emit(`${e.substring(0,e.lastIndexOf("."))}-changed`,t),event.emit(`${e}-changed`,t)},get(e){const t=e.split(".");let s=this._state;for(let e=0;e<t.length;e++)s=s[t[e]];return void 0===s?"":s}},window.onload=function(){const e=/^\{\{\s?(!?)([\w.]+):?([\w]+)?\s?\}\}$/;document.querySelectorAll("*").forEach(t=>{if(e.test(t.textContent)){const s=t.textContent.match(e),n=s[1],a=s[2],o=s[3];t.hasAttribute("data-bind-once")||event.on(`${a}-changed`,e=>{e=o?window[o](e):e,setText(t,n?!e:e)});let i=state.get(a);i=o?window[o](i):i,setText(t,n?!i:i)}Array.from(t.attributes).map(e=>({name:e.name,value:e.value})).forEach(({name:s,value:n})=>{if(e.test(n)){const a=n.match(e),o=a[1],i=a[2];s.startsWith("data-bind")&&(t.removeAttribute(s),s=s.split("-").pop()),event.on(`${i}-changed`,e=>{setAttribute(t,s,o?!e:e)});const d=state.get(i);setAttribute(t,s,o?!d:d)}})}),document.querySelector(".game").removeAttribute("hidden");const t=document.createElement("script");t.src="https://cdn.jsdelivr.net/npm/wicg-inert@3.0.1/dist/inert.min.js",document.body.appendChild(t)};class ComputedPrice extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("path"),t=this.hasAttribute("data-bind-once");this.setPrice(),t||event.on(`${e}-changed`,()=>this.setPrice())}setPrice(){const e=this.getAttribute("path"),t=state.get(e),s=state.get("systems"),n=[];for(const e in t){if(!t[e])continue;const a=t[e]>0?"+":"-",o=t[e]>0?"online":"offline";n.push(`<span class="${o}">${a}${Math.abs(t[e])}</span><span role="img" aria-label="${s[e].name}">${symbols[e]}</span>`)}this.innerHTML=n.length?n.join(" "):""}}customElements.define("computed-price",ComputedPrice);class GameModal extends HTMLElement{constructor(){super()}connectedCallback(){if(this._modal=this.children[0],this._modal.setAttribute("role","modal"),this._modal.setAttribute("tabindex","-1"),this._modal.classList.add("modal"),!this.hasAttribute("no-close")){const e=document.createElement("button");e.setAttribute("style","margin-top: 1rem;"),e.innerHTML="Close",e.setAttribute("data-close",!0),this._modal.appendChild(e),this.addEventListener("click",e=>{const t=e.target.closest("button");t instanceof HTMLButtonElement&&!t.hasAttribute("disabled")&&!t.hasAttribute("data-no-close")&&this.close()})}}open(){this._prevElement=document.activeElement,this.setAttribute("open",!0),this._modal.focus(),document.querySelector("[data-modal-hide]").inert=!0,pause(),document.body.style.overflow="hidden"}close(){document.querySelector("[data-modal-hide]").inert=!1,this._prevElement.focus(),this.removeAttribute("open"),pause(),document.body.style.overflow=null}}customElements.define("game-modal",GameModal);class OptionsModal extends GameModal{constructor(){super()}connectedCallback(){this.getOptions(),this.innerHTML='\n      <div class="options">\n        <h2 id="option-title">Options</h2>\n\n        <form aria-labelledby="option-title" onsubmit="return false">\n          <label for="color-blind" id="color-blind-label">Color Blind Mode:</label>\n          <button\n            type="button"\n            id="color-blind"\n            name="color-blind"\n            role="checkbox"\n            aria-labelledby="color-blind-label"\n            aria-checked="{{options.colorBlind}}"\n            data-no-close="true"\n          >\n            <span>On</span>\n            <span>Off</span>\n          </button>\n\n          <label for="music" id="music-label">Music:</label>\n          <button\n            type="button"\n            id="music"\n            name="music"\n            role="checkbox"\n            aria-labelledby="music-label"\n            aria-checked="{{options.music}}"\n            data-no-close="true"\n          >\n            <span>On</span>\n            <span>Off</span>\n          </button>\n\n          <label id="volume-label" for="volume">Volume:</label>\n          <div class="input-group">\n            <input\n              type="range"\n              id="volume"\n              name="volume"\n              min="0"\n              max="100"\n              step="5"\n              data-bind-value="{{options.volume}}"\n            />\n            <div\n              id="volume-output"\n              class="range-output"\n              aria-hidden="true"\n            >\n            </div>\n          </div>\n\n          <label for="game-speed">Game Speed:</label>\n          <div class="input-group">\n            <input\n              type="range"\n              id="game-speed"\n              name="game-speed"\n              min="0"\n              max="200"\n              step="10"\n              data-bind-value="{{options.gameSpeed}}"\n            />\n            <div\n              id="game-speed-output"\n              class="range-output"\n              aria-hidden="true"\n            >\n            </div>\n          </div>\n\n          <button id="save" class="save">Save</button>\n        </form>\n      </div>',super.connectedCallback();const e=this.querySelector("#color-blind"),t=this.querySelector("#music"),s=this.querySelector("#volume"),n=this.querySelector("#volume-output"),a=this.querySelector("#game-speed"),o=this.querySelector("#game-speed-output"),i=this.querySelector("#save"),d=this.querySelector("[data-close]");e.addEventListener("click",(function(){const e="true"===this.getAttribute("aria-checked");this.setAttribute("aria-checked",!e)})),t.addEventListener("click",(function(){const e="true"===this.getAttribute("aria-checked");this.setAttribute("aria-checked",!e)})),s.addEventListener("input",(function(){n.innerHTML=this.value})),n.innerHTML=state.get("options.volume"),a.addEventListener("input",(function(){o.innerHTML=this.value})),o.innerHTML=state.get("options.gameSpeed"),i.addEventListener("click",()=>this.saveOptions()),d.addEventListener("click",()=>this.resetForm())}saveOptions(){const e=this.querySelector("#game-speed"),t=this.querySelector("#color-blind"),s=this.querySelector("#music"),n=this.querySelector("#volume"),a=parseInt(e.min,10),o=parseInt(e.max,10),i=e.value=clamp(a,o,e.value),d=JSON.parse(t.getAttribute("aria-checked")),r=JSON.parse(s.getAttribute("aria-checked")),c=parseInt(n.value,10);state.set("options.gameSpeed",i),state.set("options.colorBlind",d),state.set("options.music",r),state.set("options.volume",c),localStorage.setItem("ravaged_space_options",JSON.stringify(state.get("options")))}getOptions(){let e=localStorage.getItem("ravaged_space_options");e&&(e=JSON.parse(e),state.set("options.gameSpeed",e.gameSpeed),state.set("options.colorBlind",e.colorBlind),state.set("options.music",e.music),state.set("options.volume",e.volume))}resetForm(){const e=this.querySelector("#color-blind"),t=this.querySelector("#music"),s=this.querySelector("#volume"),n=this.querySelector("#volume-output"),a=this.querySelector("#game-speed"),o=this.querySelector("#game-speed-output");e.setAttribute("aria-checked",state.get("options.colorBlind")),t.setAttribute("aria-checked",state.get("options.music")),s.value=state.get("options.volume"),n.innerHTML=state.get("options.volume"),a.value=state.get("options.gameSpeed"),o.innerHTML=state.get("options.gameSpeed")}open(){super.open(),document.querySelector(".pause-overlay").removeAttribute("hidden")}close(){super.close(),document.querySelector(".pause-overlay").setAttribute("hidden",!0)}}customElements.define("options-modal",OptionsModal);let id=0;class SystemStatusTable extends HTMLElement{constructor(){super()}connectedCallback(){const e=document.createElement("table");e.setAttribute("role","table"),e.classList.add("system-status");e.setAttribute("aria-label","Systems"),e.innerHTML=`\n      <thead>\n        <tr role="row">\n          <th role="columnheader" id="${id?`${id}-`:""}system-header"><span class="visually-hidden">System</span></th>\n          <th role="columnheader" id="${id?`${id}-`:""}resource-header">Resource Systems</th>\n          <th role="columnheader" id="${id?`${id}-`:""}action-header">Action</th>\n          <th role="columnheader" id="${id?`${id}-`:""}load-header"><span class="table-spacer"><span class="load-price start visually-hidden">Load</span></span></th>\n          <th role="columnheader" id="${id?`${id}-`:""}modifications-header"><span class="table-spacer start visually-hidden">Modifications</span></th>\n        </tr>\n      </thead>`;let t=document.createElement("tbody");const s=state.get("systems"),n=state.get("actions"),a=state.get("upgrades");let o=!1;for(const i in s){let d=s[i].type;if("main"===d&&!o){o=!0,e.appendChild(t),t=document.createElement("tbody");const s=document.createElement("tr");s.setAttribute("role","row"),s.innerHTML=`\n          <th><span class="visually-hidden"></span></th>\n          <th role="columnheader" colspan="4" class="main-header" id="${id?`${id}-`:""}main-header">Main Systems</th>\n        `,t.appendChild(s)}const r=Object.keys(a).find(e=>a[e].system===i),c=getStatus(i),l=symbols[c];event.on(`systems.${i}.status-changed`,()=>this.setStatusIcon(i));const u=document.createElement("tr");u.setAttribute("role","row"),u.innerHTML=`\n        <th role="rowheader" id="${id?`${id}-`:""}${i}-header" headers="system-header">\n          <span class="visually-hidden">${s[i].name}</span>\n        </th>\n        <td role="cell" headers="${i}-header ${d}-header">\n          <div class="status-grid">\n            <span aria-hidden="true">${symbols[i]}</span>\n            <span aria-hidden="true">${s[i].name}</span>\n            <span id="${id?`${id}-`:""}${i}-status-icon">${l}</span>\n            <system-status system="${i}"></system-status>\n            <span aria-hidden="true" class="change">\n              <span id="${id?`${id}-`:""}${i}-diff" class="diff"></span>\n            </span>\n          </div>\n        </td>\n        <td role="cell" headers="${i}-header action-header">\n          <div\n            inert="{{actions.${i}.hidden}}"\n            data-hidden="{{actions.${i}.hidden}}"\n            ${"main"===d?`hidden={{!specials.${i}.hidden}}`:""}\n          >\n            <button\n              id="${id?`${id}-`:""}${i}-button"\n              data-action="${i}"\n              aria-disabled="{{actions.${i}.disabled}}"\n              data-maxed="{{actions.${i}.maxLevel}}"\n              aria-describedby="${i}-describe"\n            >\n              <span class="action-name">${n[i].name}</span>\n              <computed-price path="actions.${i}.price"></computed-price>\n              <span\n                class="cooldown"\n                style="{{actions.${i}.style}}"\n              ></span>\n            </button>\n            <span\n              id="${id?`${id}-`:""}${i}-describe"\n              hidden\n            >{{actions.${i}.describeby}}</span>\n          </div>\n          ${"main"===d?`\n            <div\n              inert="{{specials.${i}.hidden}}"\n              hidden="{{specials.${i}.hidden}}"\n            >\n              <button\n                data-special="${i}"\n                aria-disabled="{{specials.${i}.disabled}}"\n                aria-describedby="${i}-describe"\n              >\n                ${state.get(`specials.${i}.name`)}\n                <span class="cooldown" style="{{specials.${i}.style}}"></span>\n              </button>\n            </div>`:""}\n        </td>\n        <td role="cell" headers="${i}-header load-header">\n          <div class="table-spacer start visually-hidden">\n            <button\n              id="${id?`${id}-`:""}${i}-load-button"\n              tabindex="-1"\n              hidden="{{!systems.${i}.hasLoad}}"\n              aria-disabled="true"\n              class="no-focus load-price"\n              aria-describedby="${i}-load-describe"\n              data-system-load="${i}"\n            >\n              <computed-price\n                path="systems.${i}.load"\n                class="action-load"\n              ></computed-price>\n              <span\n                class="cooldown"\n                style="{{actions.lifeSupportLoad.style}}"\n              ></span>\n            </button>\n            <span\n              id="${id?`${id}-`:""}${i}-load-describe"\n              hidden\n            >{{actions.lifeSupportLoad.loadDescribeby}}</span>\n          </div>\n        </td>\n        <td role="cell" headers="${i}-header modifications-header">\n          ${r?`\n            <div class="table-spacer start visually-hidden">\n              <button\n                data-upgrade-modal=${r}\n                inert="{{upgrades.${r}.hidden}}"\n                data-hidden="{{upgrades.${r}.hidden}}"\n                aria-disabled="{{upgrades.${r}.disabled}}"\n                data-maxed="{{upgrades.${r}.allPurchased}}"\n              >\n                ${a[r].name}\n              </button>\n            `:""}\n          </div>\n        </td>`,t.appendChild(u)}e.appendChild(t),this.appendChild(e)}setStatusIcon(e){const t=getStatus(e);document.getElementById(`${e}-status-icon`).innerHTML=symbols[t]}}customElements.define("system-status-table",SystemStatusTable);class SystemStatus extends HTMLElement{constructor(){super()}connectedCallback(){const e=this.getAttribute("system");this.prevStatus=state.get(`systems.${e}.status`),this.setStatus(),event.on(`systems.${e}.status-changed`,()=>this.setStatus())}setStatus(){const e=this.getAttribute("system");let t=state.get(`systems.${e}.status`);t<=0&&(t=0);const s=getStatus(e);"destroyed"===s&&gameOver();const n=Math.max(t+getSystemLoad(e),0),a=t-n,o='<span class="status full"></span>',i='<span class="status empty"></span>';let d=`${s}: ${t} of 10 health`;a&&(d+=`; Losing ${a} on next load cycle`);let r=this.prevStatus-t;r=r>t?t:r;let c="";r>0&&(c=Array(r).fill(`\n        <span class="cycle-loss-wrapper">\n          <span class="cycle-loss ${s} system-loss">\n           ${o}\n          </span>\n          ${i}\n        </span>`).join(""));const l=`${n>0||a>0?`\n      <span class="status-bar ${s} full">\n        ${Array(n).fill(o).join("")}\n        ${a?Array(a).fill(`\n            <span class="cycle-loss-wrapper">\n              <span class="cycle-loss" data-opacity>${o}</span>\n              ${i}\n            </span>`).join(""):""}\n      </span>`:""}\n      <span class="status-bar">\n        ${c}\n        ${Array(10-t-(c?r:0)).fill(i).join("")}\n      </span>`;if(this.innerHTML=`\n      <span\n        class="status-wrapper"\n        role="img"\n        aria-label="${d}"\n      >\n        ${l}\n      </span>`,c){const e=this.querySelectorAll(".system-loss");setTimeout(()=>{e.forEach(e=>e.classList.add("animate"))},50),setTimeout(()=>{e.forEach(e=>e.remove())},1e3)}this.prevStatus=t}}customElements.define("system-status",SystemStatus),document.querySelectorAll("[data-action]").forEach(e=>{e.addEventListener("click",t=>{if("true"===t.currentTarget.getAttribute("aria-disabled")||isGameOver)return;const s=e.dataset.action,n=state.get(`actions.${s}`),a=document.getElementById(`${s}-button`),o=document.activeElement===a,i=getSeconds(n.cooldown);state.set(`actions.${s}.clicked`,n.clicked+1),state.set(`actions.${s}.disabled`,!0),state.set(`actions.${s}.timer`,n.cooldown),state.set(`actions.${s}.style`,"width: 100%;"),void 0!==n.level&&(state.set(`actions.${s}.level`,n.level+1),3===n.level&&state.set(`actions.${s}.maxLevel`,!0));let d=!1;for(const e in n.load){d=!0,state.set(`systems.${s}.hasLoad`,!0);const t=n.load[e][n.level],a=state.get(`systems.${s}.load.${e}`)||0;if(state.set(`systems.${s}.load.${e}`,a+t),state.set(`actions.${e}Load.hidden`,!1),event.emit(`systems.${e}.status-changed`),state.set(`actions.${e}Load.timer`,state.get("actions.lifeSupportLoad.timer")),t){const e=document.querySelector(`[data-system-load=${s}]`);setTimeout(()=>{e.classList.add("notify")},50),setTimeout(()=>{e.classList.remove("notify")},550)}}if(d){const e=getPriceStr(state.get(`systems.${s}.load`));announce(`${state.get(`systems.${s}.name`)} will now deduct ${e} every load cycle.`,"polite")}for(const e in n.price){const t=state.get(`systems.${e}.status`),s=n.price[e],a=clamp(-1,10,t+s);state.set(`systems.${e}.status`,a),showChange(e,s)}o&&announce(`${n.name} on cooldown for ${i} seconds.`,"polite"),event.emit("action",s)})});let rAF,now,dt,accumulator=0,delta=1e3/60,step=1/60,last=performance.now();function loop(){if(rAF=requestAnimationFrame(loop),now=performance.now(),dt=now-last,last=now,dt>1e3)return;accumulator+=dt;const e=state.get("systems");for(Object.keys(e).filter(t=>"main"===e[t].type).every(e=>"online"===getStatus(e))&&(isGameOver=!0,document.getElementById("win-game").open());accumulator>=delta;){const t=state.get("actions");for(const s in t){const t=state.get(`actions.${s}`);if(!t.hidden&&!t.maxLevel){const n=document.getElementById(`${s}-button`),a=document.activeElement===n;if(t.timer>0){const e=t.timer-delta,n=e/t.cooldown*100;state.set(`actions.${s}.timer`,e),state.set(`actions.${s}.style`,`width: ${n.toFixed(2)}%;`);let a="";a=t.auto?`Auto producing every ${getSeconds(t.cooldown)} seconds; Next production in ${getSeconds(e)} seconds.`:`On cooldown for ${getSeconds(e)} seconds.`,state.set(`actions.${s}.describeby`,a),s.includes("Load")&&(a=`Auto deducting every ${getSeconds(t.cooldown)} seconds; Next load cycle in ${getSeconds(t.timer)} seconds.`,state.set(`actions.${s}.loadDescribeby`,a))}else if(t.disabled&&(state.set(`actions.${s}.disabled`,!1),state.set(`actions.${s}.describeby`,""),state.set(`actions.${s}.loadDescribeby`,""),n&&a&&announce(`${t.name} ready for use.`,"polite")),t.auto&&document.querySelector(`[data-action="${s}"]`).click(),"lifeSupportLoad"===s){const s={power:0,lifeSupport:0};for(name in e)for(systemLoad in e[name].load)s[systemLoad]+=e[name].load[systemLoad];announce(`System load deducted ${getPriceStr(s)}. Next load cycle in ${getSeconds(t.cooldown)} seconds.`,"assertive")}}}const s=state.get("actions.lifeSupportLoad"),n=lerp(100,385,s.timer/s.cooldown),a=Math.abs(Math.sin(s.timer/n));document.querySelectorAll("[data-opacity]").forEach(e=>{e.style="opacity: "+a});const o=state.get("specials");for(const e in o){const t=state.get(`specials.${e}`);if(!t.hidden&&t.timer>0){const s=t.timer-delta;state.set(`specials.${e}.timer`,s),state.set(`specials.${e}.style`,`width: ${(s/t.cooldown*100).toFixed(2)}%;`),state.set(`actions.${e}.describeby`,`On cooldown for ${getSeconds(s)} seconds.`)}}accumulator-=delta}}loop.stop=function(){cancelAnimationFrame(rAF),rAF=null},loop.start=function(){rAF||isGameOver||(last=performance.now(),loop())},event.on("action",()=>{const e=[];let t="";const s=state.get("actions");for(const t in s){const n=s[t];n.hidden&&n.prereqs&&(Object.keys(n.prereqs).every(e=>state.get(e)>=n.prereqs[e])&&(state.set(`actions.${t}.hidden`,!1),state.set(`actions.${t}.disabled`,!1),e.push(state.get(`systems.${t}.name`))))}if(e.length){t+=`New system action${e.length>1?"s":""} available: ${e.join(", ")}. `,e.length=0}const n=state.get("upgrades");for(const t in n){const s=n[t];Object.keys(s.prereqs).every(e=>state.get(e)>=s.prereqs[e])&&(event.emit("show-upgrades"),state.set(`upgrades.${t}.hidden`,!1),state.set(`upgrades.${t}.disabled`,!1),e.push(state.get(`systems.${s.system}.name`)))}if(e.length){t+=`New modification${e.length>1?"s":""} available: ${e.join(", ")}. `,e.length=0}const a=state.get("specials");for(const e in a){const t=a[e];if(t.hidden&&!t.disablePrereq&&Object.keys(t.prereqs).every(e=>{const s=state.get(e);return"number"==typeof s?s>=t.prereqs[e]:s===t.prereqs[e]})){state.set(`specials.${e}.hidden`,!1),state.set(`specials.${e}.disabled`,!1);const t=document.querySelector(`[data-special="${e}"]`);setTimeout(()=>{if(t.focus(),"sensors"===e){document.querySelector("#pre-sensors-special").open()}},100)}}announce(t,"polite")}),document.querySelectorAll("[data-special]").forEach(e=>{e.addEventListener("click",t=>{if("true"===t.currentTarget.getAttribute("aria-disabled")||isGameOver)return;const s=e.dataset.special,n=state.get(`specials.${s}`);state.set(`specials.${s}.clicked`,n.clicked+1),state.set(`specials.${s}.disabled`,!0),state.set(`specials.${s}.timer`,n.cooldown),state.set(`specials.${s}.style`,"width: 100%;"),state.set(`specials.${s}.disablePrereq`,!0),announce(`${n.name} on cooldown for ${getTime(n.cooldown)} seconds.`,"polite"),event.on(`specials.${s}.timer-changed`,t=>{if(t<=0){state.set(`specials.${s}.hidden`,!0),state.set(`specials.${s}.disabled`,!0),document.activeElement===e&&document.querySelector(`[data-action="${s}"]`).focus();const t=document.getElementById(`${s}-special`);t&&t.open(),"engineering"===s&&(state.set("actions.power.price.power",10),state.set("actions.power.price.processing",0)),event.emit("action",s)}}),event.emit("special",s)})}),document.querySelectorAll("[data-upgrade]").forEach(e=>{e.addEventListener("click",t=>{const s=t.target.closest("button");if(!(s instanceof HTMLButtonElement)||"true"===s.getAttribute("aria-disabled")||!s.dataset.system||isGameOver)return;const n=e.dataset.upgrade,a=state.get(`upgrades.${n}`),o=s.dataset.system,i=state.get(`actions.${o}`);switch(state.set(`upgrades.${n}.systems.${o}`,!0),a.type){case"amount":for(const e in i.upgradePrice){const t=i.upgradePrice[e];state.set(`actions.${o}.price.${e}`,t)}break;case"auto":state.set(`actions.${o}.auto`,!0);break;case"speed":const e=i.upgradeCooldown,t=i.timer;state.set(`actions.${o}.cooldown`,e),state.set(`actions.${o}.timer`,t/2)}if(a.price)for(const e in a.price){const t=state.get(`systems.${e}.status`),s=a.price[e],n=clamp(-1,10,t-s);state.set(`systems.${e}.status`,n),showChange(e,"decrease",s)}if(a.load&&1===a.clicked)for(const e in a.load){const t=a.load[e],s=state.get(`systems.${a.system}.load.${e}`)||0;state.set(`systems.${a.system}.load.${e}`,s+t);const n=document.querySelector(`[data-system-load=${a.system}]`);setTimeout(()=>{n.classList.add("notify")},50),setTimeout(()=>{n.classList.remove("notify")},550)}const d=Object.keys(a.systems),r=d.filter(e=>a.systems[e]).length,c=Object.keys(a.prereqs)[0];a.prereqs[c]++,r>=state.get(c)&&state.set(`upgrades.${n}.disabled`,!0),r===d.length&&(state.set(`upgrades.${n}.disabled`,!0),state.set(`upgrades.${n}.allPurchased`,!0)),event.emit("action",name)})}),document.querySelectorAll("[data-upgrade-modal]").forEach(e=>{e.addEventListener("click",t=>{if("true"===t.target.getAttribute("aria-disabled"))return;const s=e.dataset.upgradeModal,n=state.get(`upgrades.${s}`);document.querySelector(`game-modal[data-upgrade="${s}"]`).open(),state.set(`upgrades.${s}.clicked`,n.clicked+1)})});